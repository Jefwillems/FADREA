# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-04-25 20:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('text', markdownx.models.MarkdownxField(default='')),
                ('slug', models.SlugField(blank=True, max_length=40, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('biography', markdownx.models.MarkdownxField(default='')),
                ('slug', models.SlugField(blank=True, max_length=40, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HighScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('username', models.CharField(default='None', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('description', markdownx.models.MarkdownxField(blank=True, default='', null=True)),
                ('slug', models.SlugField(blank=True, max_length=40, null=True, unique=True)),
                ('created', models.DateTimeField(editable=False)),
                ('edited', models.DateTimeField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='Spotlight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistImagePost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Post')),
                ('content', models.URLField(default='')),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('main.post',),
        ),
        migrations.CreateModel(
            name='ArtistVideoPost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Post')),
                ('content', embed_video.fields.EmbedVideoField(default='')),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('main.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imageposts', to='main.Artist'),
        ),
        migrations.AddField(
            model_name='post',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_main.post_set+', to='contenttypes.ContentType'),
        ),
    ]
